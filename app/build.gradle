apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    signingConfigs {
        signing {
            keyAlias 'key0'
            keyPassword 'CuQv3BsSTS0pg1rSG6lC'
            storeFile file('T:/AndroidCert/appkey.jks')
            storePassword '205id8katmiHt54IlZVy'
        }
    }
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "se.jakob.knarkklocka"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 5
        versionName "1.5"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.signing
        }
    }
    dataBinding {
        enabled = true
    }
    configurations {
        ktlint
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
    flavorDimensions "version"
    productFlavors {
        experimental {
            dimension "version"
            applicationIdSuffix ".experimental"
            versionNameSuffix "-experimental"
            signingConfig signingConfigs.signing
        }
        stable {
            dimension "version"
            applicationIdSuffix ".stable"
            versionNameSuffix "-stable"
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {

    //Linting
    ktlint 'com.github.shyiko:ktlint:0.31.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutinesVersion"
    implementation 'androidx.core:core-ktx:1.2.0-rc01'
    implementation 'com.google.android.material:material:1.2.0-alpha03'
    implementation "androidx.legacy:legacy-support-v4:$rootProject.androidXlegacyVersion"
    implementation "androidx.annotation:annotation:$rootProject.annotationsVersion"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta4'

    // Testing dependencies
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    androidTestImplementation 'androidx.test:core:1.3.0-alpha03'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0-alpha03'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha03'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0-alpha03'
    androidTestImplementation "androidx.test.uiautomator:uiautomator:$rootProject.uiAutomatorVersion"
    testImplementation "junit:junit:4.13"

    //Room
    implementation 'androidx.room:room-runtime:2.2.3'
    kapt 'androidx.room:room-compiler:2.2.3'

    // use kapt for Kotlin

    // optional - RxJava support for Room
    implementation 'androidx.room:room-rxjava2:2.2.3'

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation 'androidx.room:room-guava:2.2.3'

    // Test helpers
    testImplementation 'androidx.room:room-testing:2.2.3'

    //////////// Lifecycle Dependencies ////////////

    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0-rc03'
    implementation 'androidx.lifecycle:lifecycle-livedata:2.2.0-rc03'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0-rc03'

    // AndroidX libraries use this lightweight import for Lifecycle
    implementation 'androidx.lifecycle:lifecycle-runtime:2.2.0-rc03'
    kapt 'androidx.lifecycle:lifecycle-compiler:2.2.0-rc03'

    // WorkManager
    implementation("android.arch.work:work-runtime-ktx:$rootProject.workVersion") {
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }

    // optional - Test helpers
    androidTestImplementation "android.arch.work:work-testing:$rootProject.workVersion"

    // Preferences
    implementation 'androidx.preference:preference:1.1.0'
    implementation "androidx.legacy:legacy-preference-v14:$rootProject.androidXlegacyVersion"

    // Navigation
    implementation "android.arch.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"
    implementation "android.arch.navigation:navigation-ui-ktx:$rootProject.navigationVersion"
    implementation 'androidx.fragment:fragment-ktx:1.2.0-rc05'


}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}
