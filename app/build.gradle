apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    signingConfigs {
        signing {
            keyAlias 'key0'
            keyPassword 'CuQv3BsSTS0pg1rSG6lC'
            storeFile file('T:/AndroidCert/appkey.jks')
            storePassword '205id8katmiHt54IlZVy'
        }
    }
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "se.jakob.knarkklocka"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 3
        versionName "1.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.signing
        }
    }
    dataBinding {
        enabled = true
    }
    configurations {
        ktlint
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
    flavorDimensions "version"
    productFlavors {
        experimental {
            dimension "version"
            applicationIdSuffix ".experimental"
            versionNameSuffix "-experimental"
            signingConfig signingConfigs.signing
        }
        stable {
            dimension "version"
            applicationIdSuffix ".stable"
            versionNameSuffix "-stable"
        }
    }
}

dependencies {

    //Linting
    ktlint "com.github.shyiko:ktlint:0.29.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutinesVersion"
    implementation "androidx.core:core-ktx:$rootProject.ktxVersion"
    implementation "com.google.android.material:material:$rootProject.supportLibraryVersion"
    implementation "androidx.legacy:legacy-support-v4:$rootProject.supportLibraryVersion"
    implementation "androidx.annotation:annotation:$rootProject.annotationsVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"

    // Testing dependencies
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.coreTestingVersion"
    androidTestImplementation "androidx.test:core:$rootProject.testVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:$rootProject.uiAutomatorVersion"
    testImplementation "junit:junit:$rootProject.junitVersion"

    //Room
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"

    // use kapt for Kotlin

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$rootProject.roomVersion"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$rootProject.roomVersion"

    // Test helpers
    testImplementation "androidx.room:room-testing:$rootProject.roomVersion"

    // Lifecycle

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata:$rootProject.lifecycleVersion"

    // alternatively - Lifecycles only (no ViewModel or LiveData). Some UI

    // AndroidX libraries use this lightweight import for Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime:$rootProject.lifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$rootProject.lifecycleVersion"

    // use kapt for Kotlin

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$rootProject.lifecycleVersion"

    // WorkManager
    implementation("android.arch.work:work-runtime-ktx:$rootProject.workVersion") {
        // use -ktx for Kotlin
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }

    // optional - Test helpers
    androidTestImplementation "android.arch.work:work-testing:$rootProject.workVersion"

    // Preferences
    implementation "androidx.preference:preference:$rootProject.preferenceVersion"
    implementation "androidx.legacy:legacy-preference-v14:$rootProject.preferenceVersion"

    // Navigation
    implementation "android.arch.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"

    // use -ktx for Kotlin
    implementation "android.arch.navigation:navigation-ui-ktx:$rootProject.navigationVersion"

    // use -ktx for Kotlin
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}
